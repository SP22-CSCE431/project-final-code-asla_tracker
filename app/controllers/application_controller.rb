# frozen_string_literal: true

# NOTE: this ensures that all controllers are auth'ed by default
# the authenticate_user is generated by devise and redirects unauth'ed
# users to the login page

class ApplicationController < ActionController::Base
  before_action :authenticate_user!

  def print_session
    Rails.logger.debug(session[:profile_pic])
    Rails.logger.debug('ID:')
    Rails.logger.debug(session[:userID])
  end

  def student?
    redirect_to(pages_unauthorized_path) unless session[:isBusinessProfessional] || session[:isAdmin]
  end

  def admin?
    unless session[:isAdmin]
      Rails.logger.debug('NOT AN ADMIN')
      redirect_to(pages_unauthorized_path)
    end
  end

  def account_created?
    redirect_to(pages_unauthorized_path) unless session[:creatingAccount]
  end

  def account_creating?
    redirect_to(pages_select_account_type_path, notice: 'Please finish creating your account.') if session[:creatingAccount]
  end

  def allowed_to_view_student?
    redirect_to(pages_unauthorized_path) if (Integer(params[:id], 10) != session[:userID] && !session[:isAdmin]) || (Integer(params[:id], 10) == session[:userID] && !session[:isMember])
  end

  def allowed_to_view_bpro?
    redirect_to(pages_unauthorized_path) if (Integer(params[:id], 10) != session[:userID] && !session[:isAdmin]) || (Integer(params[:id], 10) == session[:userID] && (!session[:isBusinessProfessional] && !session[:isAdmin]))
  end

  def allowed_to_view_student_info?
    redirect_to(pages_unauthorized_path) if Integer(params[:id], 10) != session[:userID] && !session[:isAdmin] && !session[:isBusinessProfessional]
  end
end
